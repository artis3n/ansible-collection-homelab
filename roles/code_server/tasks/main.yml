---
- name: Get Architecture
  ansible.builtin.set_fact:
    architecture: "{{ architecture_map[ansible_architecture] }}"

- name: Install Pip Dependencies
  ansible.builtin.pip:
    name: github3.py
    state: present

- name: Get Latest Code Server Release
  community.general.github_release:
    user: coder
    repo: code-server
    action: latest_release
  register: code_server_version

- name: Install Code Server
  become: true
  ansible.builtin.apt:
    deb: 'https://github.com/coder/code-server/releases/download/{{ code_server_version.tag }}/code-server_{{ code_server_version.tag[1:] }}_{{ architecture }}.deb'

- name: Configure Code Server Service
  become: true
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/user/code-server.service
    regexp: "^ExecStart="
    line: "ExecStart=/usr/bin/code-server"
  notify: Reload Code-Server Service

- name: Configure Code Server Service Environment Variables
  become: true
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/user/code-server.service
    regexp: "^Environment="
    line: 'Environment="CS_DISABLE_GETTING_STARTED_OVERRIDE=1"'
  notify: Reload Code-Server Service

- name: Initialize Code Server Service
  become: true
  ansible.builtin.service:
    name: code-server@{{ code_server_user }}
    enabled: true
    state: started

- name: Password
  when: code_server_password != ""
  block:
    - name: Set Code Server Password
      when: code_server_password != ""
      ansible.builtin.set_fact:
        hashed_code_server_password: "{{ lookup('artis3n.homelab.password_hash', code_server_password) }}"

    - name: Check good hash
      ansible.builtin.assert:
        that:
          - hashed_code_server_password | length > 0

- name: Configure Code Server
  become: true
  become_user: "{{ code_server_user }}"
  ansible.builtin.template:
    src: ../files/code-server-config.yaml.j2
    dest: "{{ ansible_env.HOME }}/.config/code-server/config.yaml"
    owner: "{{ code_server_user }}"
    mode: '0644'
  notify: Restart Code Server
